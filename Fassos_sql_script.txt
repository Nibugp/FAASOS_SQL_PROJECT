drop table if exists driver;
CREATE TABLE driver(driver_id integer,reg_date date); 

INSERT INTO driver(driver_id,reg_date) 
 VALUES (1,'01-01-2021'),
(2,'01-03-2021'),
(3,'01-08-2021'),
(4,'01-15-2021');


drop table if exists ingredients;
CREATE TABLE ingredients(ingredients_id integer,ingredients_name varchar(60)); 

INSERT INTO ingredients(ingredients_id ,ingredients_name) 
 VALUES (1,'BBQ Chicken'),
(2,'Chilli Sauce'),
(3,'Chicken'),
(4,'Cheese'),
(5,'Kebab'),
(6,'Mushrooms'),
(7,'Onions'),
(8,'Egg'),
(9,'Peppers'),
(10,'schezwan sauce'),
(11,'Tomatoes'),
(12,'Tomato Sauce');

drop table if exists rolls;
CREATE TABLE rolls(roll_id integer,roll_name varchar(30)); 

INSERT INTO rolls(roll_id ,roll_name) 
 VALUES (1	,'Non Veg Roll'),
(2	,'Veg Roll');

drop table if exists rolls_recipes;
CREATE TABLE rolls_recipes(roll_id integer,ingredients varchar(24)); 

INSERT INTO rolls_recipes(roll_id ,ingredients) 
 VALUES (1,'1,2,3,4,5,6,8,10'),
(2,'4,6,7,9,11,12');

drop table if exists driver_order;
CREATE TABLE driver_order(order_id integer,driver_id integer,pickup_time datetime,distance VARCHAR(7),duration VARCHAR(10),cancellation VARCHAR(23));
INSERT INTO driver_order(order_id,driver_id,pickup_time,distance,duration,cancellation) 
 VALUES(1,1,'01-01-2021 18:15:34','20km','32 minutes',''),
(2,1,'01-01-2021 19:10:54','20km','27 minutes',''),
(3,1,'01-03-2021 00:12:37','13.4km','20 mins','NaN'),
(4,2,'01-04-2021 13:53:03','23.4','40','NaN'),
(5,3,'01-08-2021 21:10:57','10','15','NaN'),
(6,3,null,null,null,'Cancellation'),
(7,2,'01-08-2020 21:30:45','25km','25mins',null),
(8,2,'01-10-2020 00:15:02','23.4 km','15 minute',null),
(9,2,null,null,null,'Customer Cancellation'),
(10,1,'01-11-2020 18:50:20','10km','10minutes',null);


drop table if exists customer_orders;
CREATE TABLE customer_orders(order_id integer,customer_id integer,roll_id integer,not_include_items VARCHAR(4),extra_items_included VARCHAR(4),order_date datetime);
INSERT INTO customer_orders(order_id,customer_id,roll_id,not_include_items,extra_items_included,order_date)
values (1,101,1,'','','01-01-2021  18:05:02'),
(2,101,1,'','','01-01-2021 19:00:52'),
(3,102,1,'','','01-02-2021 23:51:23'),
(3,102,2,'','NaN','01-02-2021 23:51:23'),
(4,103,1,'4','','01-04-2021 13:23:46'),
(4,103,1,'4','','01-04-2021 13:23:46'),
(4,103,2,'4','','01-04-2021 13:23:46'),
(5,104,1,null,'1','01-08-2021 21:00:29'),
(6,101,2,null,null,'01-08-2021 21:03:13'),
(7,105,2,null,'1','01-08-2021 21:20:29'),
(8,102,1,null,null,'01-09-2021 23:54:33'),
(9,103,1,'4','1,5','01-10-2021 11:22:59'),
(10,104,1,null,null,'01-11-2021 18:34:49'),
(10,104,1,'2,6','1,4','01-11-2021 18:34:49');

select * from customer_orders;
select * from driver_order;
select * from ingredients;
select * from driver;
select * from rolls;
select * from rolls_recipes;


## Rolls metrics
1.How many rolls were ordered?

Select * from customer_orders

Select count(order_id) total_orders from customer_orders

##2. How many unique customer orders were made?

Select count(distinct(customer_id)) unique_customer from customer_orders

##3. How many successful orders were delivered by drivers?

Select * from driver_order

Select driver_id, count(distinct(order_id)) total_successful_orders from driver_order
where cancellation not in ('Cancellation', 'Customer Cancellation')
group by driver_id

##4. How many each type of rolls was delivered?

Select * from customer_orders

Select a.roll_id , count(a.roll_id) rolls_delivered from customer_orders a
join driver_order d on a.order_id = d.order_id
where d.cancellation not in ('Cancellation', 'Customer Cancellation')
group by a.roll_id

Select *, case when cancellation in ('Cancellation', 'Customer Cancellation') then 'c' else 'nc' end as order_cancellation from driver_order


##5. How many veg and non veg rolls were ordered by each customer?

select distinct(customer_id) a ,a.roll_id, count(a.roll_id) total_count , b.roll_name from customer_orders a
join rolls b on b.roll_id = a.roll_id
group by a.customer_id, a.roll_id


##6. What is the maximum rolls delivered in the single order?

Select * from customer_orders

Select distinct(a.order_id), count(a.roll_id) total_count from customer_orders a
join driver_order d on d.order_id=a.order_id
where d.cancellation not in ('c')
group by a.order_id
order by total_count desc
limit 1

##7. For each customer , how many delivered rolls had atleast 1 change and and how many had no change?

Select * from customer_orders

WITH temp_customer_orders AS (
    SELECT 
        order_id,
        customer_id,
        roll_id,
        order_date,
        CASE 
            WHEN not_include_items IS NULL OR not_include_items = '' THEN 'o' 
            ELSE not_include_items 
        END AS new_not_included_items,
        CASE 
            WHEN extra_items_included IS NULL OR extra_items_included = '' OR extra_items_included = 'Nan'
            OR extra_items_included = 'NaN' THEN 'o' 
            ELSE extra_items_included 
        END AS new_extra_items_included
    FROM customer_orders
)

##8. For each customer, how many delivered rolls had at least 1 change and how many had no change ?

WITH temp_customer_orders AS (
    SELECT 
        order_id,
        customer_id,
        roll_id,
        CASE 
            WHEN not_include_items IS NULL OR not_include_items = '' 
            THEN '0' 
            ELSE not_include_items 
        END AS new_not_include_items,
        CASE 
            WHEN extra_items_included IS NULL OR extra_items_included = '' OR extra_items_included = 'Nan' OR extra_items_included = 'NaN' 
            THEN '0' 
            ELSE extra_items_included 
        END AS new_extra_items_included,
        order_date
    FROM 
        customer_orders
),
temp_driver_order AS (
    SELECT 
        order_id, 
        driver_id, 
        pickup_time, 
        distance, 
        duration, 
        CASE 
            WHEN TRIM(LOWER(cancellation)) = 'cancellation' OR TRIM(LOWER(cancellation)) = 'customer cancellation' 
            THEN '0' 
            ELSE '1' 
        END AS new_cancellation 
    FROM 
        driver_order
)
SELECT customer_id, chg_no_chg, COUNT(order_id) 
FROM (
    SELECT *, 
        CASE 
            WHEN new_not_include_items = '0' AND new_extra_items_included = '0' 
            THEN 'no change' 
            ELSE 'change' 
        END AS chg_no_chg
    FROM temp_customer_orders
    WHERE order_id IN (
        SELECT order_id 
        FROM temp_driver_order
        WHERE new_cancellation != '0'
    )
) AS a
GROUP BY customer_id, chg_no_chg;


##9. How many rolls were delivered that had both exclusions and extras?

WITH temp_customer_orders AS (
    SELECT 
        order_id,
        customer_id,
        roll_id,
        CASE 
            WHEN not_include_items IS NULL OR not_include_items = '' 
            THEN '0' 
            ELSE not_include_items 
        END AS new_not_include_items,
        CASE 
            WHEN extra_items_included IS NULL OR extra_items_included = '' OR extra_items_included = 'Nan' OR extra_items_included = 'NaN' 
            THEN '0' 
            ELSE extra_items_included 
        END AS new_extra_items_included,
        order_date
    FROM 
        customer_orders
),
temp_driver_order AS (
    SELECT 
        order_id, 
        driver_id, 
        pickup_time, 
        distance, 
        duration, 
        CASE 
            WHEN TRIM(LOWER(cancellation)) = 'cancellation' OR TRIM(LOWER(cancellation)) = 'customer cancellation' 
            THEN '0' 
            ELSE '1' 
        END AS new_cancellation 
    FROM 
        driver_order
)
SELECT chg_no_chg, COUNT(chg_no_chg) 
FROM (
    SELECT *, 
        CASE 
            WHEN new_not_include_items != '0' AND new_extra_items_included != '0' 
            THEN 'both_include_change' 
            ELSE 'else 1 inclu or exclu' 
        END AS chg_no_chg
    FROM temp_customer_orders
    WHERE order_id IN (
        SELECT order_id 
        FROM temp_driver_order
        WHERE new_cancellation != '0'
    )
) AS a
GROUP BY chg_no_chg;

##10. What was the total number of rolls ordered for each part of the day ?

Select hours_bucket,count(hours_bucket) from
(SELECT 
    *,
    (CAST(strftime('%H', substr(order_date, 7, 4) || '-' || substr(order_date, 4, 2) || '-' || substr(order_date, 1, 2) || ' ' || substr(order_date, 12, 8)) AS VARCHAR) || '-' ||
    CAST(CAST(strftime('%H', substr(order_date, 7, 4) || '-' || substr(order_date, 4, 2) || '-' || substr(order_date, 1, 2) || ' ' || substr(order_date, 12, 8)) AS INTEGER) + 1 AS VARCHAR)) AS hours_bucket
FROM 
    customer_orders) as a
group by hours_bucket


## What was the number of orders for each day of the week ?

Select * from customer_orders

SELECT *, 
    order_date,
    -- Convert MM-DD-YYYY HH:MM:SS to YYYY-MM-DD HH:MM:SS
    substr(order_date, 7, 4) || '-' || substr(order_date, 1, 2) || '-' || substr(order_date, 4, 2) || ' ' || substr(order_date, 12, 8) AS converted_order_date
FROM 
    customer_orders;
    
Select day_of_week, count(distinct(order_id)) from
 (   
SELECT *,
    order_date,
    -- Convert MM-DD-YYYY HH:MM:SS to YYYY-MM-DD HH:MM:SS
    substr(order_date, 7, 4) || '-' || substr(order_date, 1, 2) || '-' || substr(order_date, 4, 2) || ' ' || substr(order_date, 12, 8) AS converted_order_date,
    -- Extract day of the week
    CASE 
        strftime('%w', substr(order_date, 7, 4) || '-' || substr(order_date, 1, 2) || '-' || substr(order_date, 4, 2) || ' ' || substr(order_date, 12, 8))
        WHEN '0' THEN 'Sunday'
        WHEN '1' THEN 'Monday'
        WHEN '2' THEN 'Tuesday'
        WHEN '3' THEN 'Wednesday'
        WHEN '4' THEN 'Thursday'
        WHEN '5' THEN 'Friday'
        WHEN '6' THEN 'Saturday'
    END AS day_of_week
FROM 
    customer_orders)
group by day_of_week








     











 






